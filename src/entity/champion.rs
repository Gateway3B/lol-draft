//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Eq, Serialize, Deserialize)]
#[cfg_attr(
    feature = "ssr",
    derive(sea_orm::DeriveEntityModel),
    sea_orm(table_name = "champion")
)]
pub struct Model {
    #[cfg_attr(feature = "ssr", sea_orm(primary_key))]
    pub id: u32,
    pub name: String,
    pub roles: Roles,
}

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, Eq)]
#[cfg_attr(
    feature = "ssr",
    derive(sea_orm::FromJsonQueryResult),
)]
pub struct Roles {
    pub roles: Vec<crate::api::Role>
}

use cfg_if::cfg_if;

cfg_if! { if #[cfg(feature = "ssr")] {
    use sea_orm::entity::prelude::*;

    #[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
    pub enum Relation {}
    
    impl ActiveModelBehavior for ActiveModel {}
}}
